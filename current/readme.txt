1.现在all cart里面和之前一样也是user cart，但user cart里的现在不再是购买的物品而是behavior即［物品，时间间隔］  
2.现在一共分为10种时间间隔， time_interval是一个a＊b的矩阵，a是时间间隔的种类，b是每种时间间隔向量的长度  
3.Tt是张量，相当于纸上公式里的Tm  
4.3.8加入了matrix.py 和basicrnn.py分别用于在新数据集上实现原始的rnn以及multi matrix形式的rnn。先在小数据集上实现好算法再转战大数据集。



3.14
	13:38 ：整理文件夹并改名为current，在matrix.py中排查掉了一些bug，切分出了两个小数据集（300用户，100000条记录，itemid已进行了重排列操作。），目前在小数据集上继续查找代码中存在的问题。
    18:08 : 在小数据集跑basicrnn作为准确率参照，结果保存在resultbasic。在小数据集上跑了将近100轮matrix，结果保存在result11.将matrix中的time_cart改为固定值，仅使用11个矩阵中的1个或2个，分别对应程序matrix1和matrix，结果也对应保存在两个文件中。
    18:33 : 改变了matrix的更新方式，在整个训练的过程中，只对各个w矩阵的更新量进行记录，在整个训练过程的最后再和u矩阵一起进行更新。要注意，matrix即使只使用一个矩阵也并不是完全和basic相同，二者在计算value的方式上存在差异，basic的value计算没有乘w矩阵。
3.16
    12:44 :今天主要关注三个问题。
        1.看一下每次predict的result有没有在更新，由此可以看出学习到底有没有效果。目前来看每次的结果是有更新的，但是有些结果出现频率很高，还没有仔细分析。
        2.看一下训练集上的预测准确率，只检查top10这一指标，目前来看训练集上的预测准确率波动不大，说明训练效果也有待商榷。
        3.改变公式，先有的test程序，检测的matrix算法，在计算权值时乘了一个wk，我认为这个矩阵有可能导致混淆，减弱学习的效果。因此我在matrix1.py中去掉了这个矩阵，由此，将整个公式彻底向原来的rnn演化，只有在计算b(t)时加入wp来表征时间间隔信息。目前这一改动的结果还在运行。

3.18
    10:30  :昨天去掉Wp跑了三个参数，其中a = 0.01 lamda=0.001这套参数的准确率上到了24%，今天继续跑这个参数。同时为了得到baseline，跑了一下basic的三个参数。此举是为了验证新方法的有效性，basic的三个参数的脚本以及结果保存在current/basic路径下。
            今天老师建议加上wk重新跑几套参数，怀疑之前结果不好是因为参数问题。现在所有的脚本都是跑的小数据集，目前就是为了把脚本调通，然后再上到大数据集。加上wk之后，同样设置了三套参数，这三个脚本以及其结果保存在withwp文件夹内。
            current目录下的matrix001-0001.py就是昨天跑出24%准确率的脚本，没有wk，仅仅在计算b的时候使用11个矩阵。
3.21
    14:10  :周末跑了三个程序，三个方法的调参基本结束，结果分别保存在basic，withwk，withoutwk三个目录下的3.21目录中。今天开始对有wk的情况进行系统调参，看一下准确率能不能超过basic的22%，如果不能就要讨论新的方法了。如果可以就开始针对tensor进行下一步改动。

